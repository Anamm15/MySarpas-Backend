generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Peminjaman {
  idPeminjaman      Int         @id @default(autoincrement())
  User_idUser       Int
  Ruangan_idRuangan Int
  tanggal           DateTime    @db.Date
  jamAwal           DateTime    @db.Time(6)
  jamAkhir          DateTime    @db.Time(6)
  jenisKegiatan     String?     @db.VarChar(100)
  status            status_enum @default(waiting)
  deskripsi         String?     @db.VarChar
  message           String?     @db.VarChar
  Ruangan           Ruangan     @relation(fields: [Ruangan_idRuangan], references: [idRuangan], onDelete: Cascade, onUpdate: NoAction)
  User              User        @relation(fields: [User_idUser], references: [idUser], onDelete: Cascade, onUpdate: NoAction)
}

model Ruangan {
  idRuangan   Int          @id @default(autoincrement())
  namaRuangan String       @db.VarChar(100)
  kapasitas   Int
  fasilitas   String?      @db.VarChar
  deskripsi   String?      @db.VarChar
  Gedung      String?      @db.VarChar
  gambar      String?      @db.VarChar
  Peminjaman  Peminjaman[]
}

model User {
  idUser             Int          @id @default(autoincrement())
  namaUser           String       @db.VarChar(100)
  email              String       @unique @db.VarChar(100)
  noTelp             String?      @db.VarChar(20)
  kartuTandaPengenal String?      @db.VarChar(50)
  role               role_enum
  password           String       @db.VarChar(100)
  Peminjaman         Peminjaman[]
}

enum role_enum {
  admin
  mahasiswa
  dosen
}

enum status_enum {
  approved
  waiting
  rejected
  canceled
}
